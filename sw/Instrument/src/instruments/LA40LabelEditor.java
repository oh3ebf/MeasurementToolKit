package instruments;
/*
 * LA40LabelEditor.java
 *
 * Created on March 21, 2004, 5:19 PM
 */

/**
 *
 * @author  operator
 */

import java.util.*;

public class LA40LabelEditor extends javax.swing.JDialog {
    private LA40LabelSelector[] pod;
    private LA40LabelName lName;
    private Vector label;
    private Vector labelData;
    private int currentLabel;
    
    /** Creates new form LA40LabelEditor */
    public LA40LabelEditor(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        // label name input dialog
        lName = new LA40LabelName(new javax.swing.JFrame(), true);
        // label bit selector table
        pod = new LA40LabelSelector[4];
        // create and name bit selectors
        pod[0] = new LA40LabelSelector();
        pod[0].setBorder(new javax.swing.border.TitledBorder("Pod 0"));
        pod[1] = new LA40LabelSelector();
        pod[1].setBorder(new javax.swing.border.TitledBorder("Pod 1"));
        pod[2] = new LA40LabelSelector();
        pod[2].setBorder(new javax.swing.border.TitledBorder("Pod 2"));
        pod[3] = new LA40LabelSelector();
        pod[3].setBorder(new javax.swing.border.TitledBorder("Pod 3"));
        jPanel4.add(pod[0]);
        jPanel4.add(pod[1]);
        jPanel4.add(pod[2]);
        jPanel4.add(pod[3]);
        setSize(640,310);
        
        label = new Vector();
        labelData = new Vector();
    }
    
    public Vector getLabelData() {
        // check validity of label information
        if((label.size() > 0) && (labelData.size() > 0)) {
            // create new vector
            Vector data = new Vector();
            // put label data set in it
            data.add(label);
            data.add(labelData);
            // return to parent object
            return(data);
        } else
            return(null);
    }
    
    public void setActive(boolean[] p) {
        // update current pod active status
        pod[0].setActive(p[0]);
        pod[1].setActive(p[1]);
        pod[2].setActive(p[2]);
        pod[3].setActive(p[3]);
    }
    
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    private void initComponents() {//GEN-BEGIN:initComponents
        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jButton1 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jPanel4 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jList1 = new javax.swing.JList();

        setTitle("Label Editor");
        setLocationRelativeTo(this);
        setName("Label Editor");
        setResizable(false);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                closeDialog(evt);
            }
        });

        jPanel1.setLayout(new java.awt.BorderLayout());

        jPanel2.setBorder(new javax.swing.border.EtchedBorder());
        jButton1.setText("Add");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jPanel2.add(jButton1);

        jButton3.setText("Delete");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jPanel2.add(jButton3);

        jButton4.setText("Update");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        jPanel2.add(jButton4);

        jButton2.setText("Close");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jPanel2.add(jButton2);

        jPanel1.add(jPanel2, java.awt.BorderLayout.SOUTH);

        jPanel4.setLayout(new javax.swing.BoxLayout(jPanel4, javax.swing.BoxLayout.Y_AXIS));

        jPanel1.add(jPanel4, java.awt.BorderLayout.CENTER);

        getContentPane().add(jPanel1, java.awt.BorderLayout.CENTER);

        jScrollPane1.setHorizontalScrollBarPolicy(javax.swing.JScrollPane.HORIZONTAL_SCROLLBAR_NEVER);
        jScrollPane1.setVerticalScrollBarPolicy(javax.swing.JScrollPane.VERTICAL_SCROLLBAR_ALWAYS);
        jScrollPane1.setDoubleBuffered(true);
        jScrollPane1.setPreferredSize(new java.awt.Dimension(110, 0));
        jScrollPane1.setAutoscrolls(true);
        jList1.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_INTERVAL_SELECTION);
        jList1.setMaximumSize(new java.awt.Dimension(100, 20000));
        jList1.setMinimumSize(new java.awt.Dimension(100, 0));
        jList1.setPreferredSize(null);
        jList1.setVisibleRowCount(10);
        jList1.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                jList1ValueChanged(evt);
            }
        });

        jScrollPane1.setViewportView(jList1);

        getContentPane().add(jScrollPane1, java.awt.BorderLayout.WEST);

        pack();
    }//GEN-END:initComponents
    
    private void jList1ValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_jList1ValueChanged
        // Add your handling code here:
        int[] mask;
        // update user selection information
        currentLabel = jList1.getSelectedIndex();
        if(currentLabel >= 0) {
            // get current mask
            mask = (int[])labelData.elementAt(currentLabel);
            // update buttons
            pod[0].setMask(mask[0]);
            pod[1].setMask(mask[1]);
            pod[2].setMask(mask[2]);
            pod[3].setMask(mask[3]);
        }
    }//GEN-LAST:event_jList1ValueChanged
    
    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        // Add your handling code here:
        
        // UPPDATE button handling code
        
        // check for valid selection
        if(jList1.isSelectionEmpty() == false) {
            // get old mask
            int[] mask = (int[])labelData.elementAt(currentLabel);
            // get new values
            mask[0] = pod[0].getMask();
            mask[1] = pod[1].getMask();
            mask[2] = pod[2].getMask();
            mask[3] = pod[3].getMask();
            //save new mask
            labelData.setElementAt(mask,currentLabel);
        }
    }//GEN-LAST:event_jButton4ActionPerformed
    
    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // Add your handling code here:
        
        // CLOSE button handling code
        
        // hide window and destroy it
        setVisible(false);
        dispose();
    }//GEN-LAST:event_jButton2ActionPerformed
    
    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // Add your handling code here:
        
        // DELETE button handling code
        
        // check valid selection        
        if(currentLabel >= 0 && labelData.size() >= currentLabel && jList1.isSelectionEmpty() == false) {
            // remove item from label data set
            labelData.remove(currentLabel);
            label.remove(currentLabel);
            jList1.revalidate();
            repaint();
        }
    }//GEN-LAST:event_jButton3ActionPerformed
    
    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // Add your handling code here:
        
        // ADD button hnadling code
        
        int[] mask = new int[4];
        // show name dialog
        lName.setVisible(true);
        // name is added only if OK button is pressed
        if(lName.getReturnStatus() == 1) {
            // save label name
            label.add(lName.getLabelName());
            // create label mask table
            labelData.add(mask);
            jList1.setListData(label);
            jList1.revalidate();
        }
    }//GEN-LAST:event_jButton1ActionPerformed
    
    /** Closes the dialog */
    private void closeDialog(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_closeDialog
        // hide dialog and destroy it on close        
        setVisible(false);
        dispose();
    }//GEN-LAST:event_closeDialog
    
    /**
     * @param args the command line arguments
     */
    //public static void main(String args[]) {
    //    new LA40LabelEditor(new javax.swing.JFrame(), true).show();
    //}
    
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel jPanel4;
    private javax.swing.JButton jButton4;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JButton jButton3;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JList jList1;
    // End of variables declaration//GEN-END:variables
    
}
