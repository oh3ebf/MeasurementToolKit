/***********************************************************
 * Software: instrument client
 * Module:   NoCANDo data view options class
 * Version:  0.1
 * Licence:  GPL2
 *
 * Owner: Kim Kristo
 * Date creation : 29.5.2013
 *
 ***********************************************************/
package instruments.can.browser;

import interfaces.OptionsInterface;
import oh3ebf.lib.common.utilities.ConfigurationInstance;
import org.apache.log4j.Logger;

public class NoCanDoDataViewOptions extends javax.swing.JInternalFrame {

    private static Logger logger;
    private ConfigurationInstance config;
    private OptionsInterface iFace;
    private boolean time_format;
    private boolean number_format;
    private boolean message_format;
    private boolean update;
    private boolean display_mode;
    public final static String PARAM_LOG_FILE = "nocando.log_file_name";
    public final static String PARAM_LOG_STATE = "nocando.log_state";
    public final static String PARAM_NUMBER_FORMAT = "nocando.number_format";
    public final static String PARAM_DISPLAY_MODE = "nocando.display_mode";
    public final static String PARAM_DISPLAY_UPDATE = "nocando.display_update";
    public final static String PARAM_DISPLAY_UPDATE_CYCLE = "nocando.display_update_cycle";
    public final static String PARAM_TIME_FORMAT = "nocando.time_format";
    public final static String PARAM_MESSAGE_FORMAT = "nocando.message_format";

    /** Creates new form NoCanDoDataViewOptions */
    public NoCanDoDataViewOptions(OptionsInterface iFace) {
        // get logger instance for this class
        logger = Logger.getLogger(NoCanDoDataViewOptions.class);
        // get configuration handler
        config = ConfigurationInstance.getConfiguration();
        // save update interface
        this.iFace = iFace;

        initComponents();

        // show message names or numeric id's
        if ((message_format = config.checkAndReadBoolValue(PARAM_MESSAGE_FORMAT, "false"))) {
            symbolicRadioButton.setSelected(true);
        } else {            
            numericRadioButton.setSelected(true);
        }

        // show absolute of relative time
        if ((time_format = config.checkAndReadBoolValue(PARAM_TIME_FORMAT, "false"))) {
            timeRelativeRadioButton.setSelected(true);
        } else {
            timeAbsoluteRadioButton.setSelected(true);
        }

        // show decimal or hexadecimal in data
        if ((number_format = config.checkAndReadBoolValue(PARAM_NUMBER_FORMAT, "false"))) {
            hexadecimalRadioButton.setSelected(true);
        } else {
            decimalRadioButton.setSelected(true);
        }

        // cyclic displsy update
        update = config.checkAndReadBoolValue(PARAM_DISPLAY_UPDATE, "false");

        // display mode
        if ((display_mode = config.checkAndReadBoolValue(PARAM_DISPLAY_MODE, "false"))) {
            if (update) {
                fixedCyclicRadioButton.setSelected(true);
            } else {
                fixedRadioButton.setSelected(true);
            }
        } else {
            if (update) {
                cronologicalCyclicRadioButton.setSelected(true);
            } else {
                cronologicalRadioButton.setSelected(true);
            }
        }
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        displayModebuttonGroup = new javax.swing.ButtonGroup();
        numberFormatbuttonGroup = new javax.swing.ButtonGroup();
        timeButtonGroup = new javax.swing.ButtonGroup();
        messagesButtonGroup = new javax.swing.ButtonGroup();
        jPanel2 = new javax.swing.JPanel();
        decimalRadioButton = new javax.swing.JRadioButton();
        hexadecimalRadioButton = new javax.swing.JRadioButton();
        jPanel3 = new javax.swing.JPanel();
        timeAbsoluteRadioButton = new javax.swing.JRadioButton();
        timeRelativeRadioButton = new javax.swing.JRadioButton();
        jPanel4 = new javax.swing.JPanel();
        numericRadioButton = new javax.swing.JRadioButton();
        symbolicRadioButton = new javax.swing.JRadioButton();
        jPanel1 = new javax.swing.JPanel();
        cronologicalRadioButton = new javax.swing.JRadioButton();
        cronologicalCyclicRadioButton = new javax.swing.JRadioButton();
        fixedRadioButton = new javax.swing.JRadioButton();
        fixedCyclicRadioButton = new javax.swing.JRadioButton();
        applyButton = new javax.swing.JButton();
        closeButton = new javax.swing.JButton();

        setBackground(new java.awt.Color(196, 204, 223));
        setTitle("Settings");
        setMaximumSize(new java.awt.Dimension(510, 280));
        setMinimumSize(new java.awt.Dimension(510, 280));
        setPreferredSize(new java.awt.Dimension(510, 280));
        try {
            setSelected(true);
        } catch (java.beans.PropertyVetoException e1) {
            e1.printStackTrace();
        }
        setVisible(true);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel2.setBackground(new java.awt.Color(196, 204, 223));
        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createEtchedBorder(), "Number format"));

        decimalRadioButton.setBackground(new java.awt.Color(196, 204, 223));
        numberFormatbuttonGroup.add(decimalRadioButton);
        decimalRadioButton.setText("Decimal");
        decimalRadioButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                decimalRadioButtonActionPerformed(evt);
            }
        });

        hexadecimalRadioButton.setBackground(new java.awt.Color(196, 204, 223));
        numberFormatbuttonGroup.add(hexadecimalRadioButton);
        hexadecimalRadioButton.setText("Hexadecimal");
        hexadecimalRadioButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                hexadecimalRadioButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(decimalRadioButton)
                    .addComponent(hexadecimalRadioButton))
                .addContainerGap(91, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addComponent(decimalRadioButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(hexadecimalRadioButton)
                .addContainerGap(37, Short.MAX_VALUE))
        );

        getContentPane().add(jPanel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(270, 10, 220, 120));

        jPanel3.setBackground(new java.awt.Color(196, 204, 223));
        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createEtchedBorder(), "Time"));

        timeAbsoluteRadioButton.setBackground(new java.awt.Color(196, 204, 223));
        timeButtonGroup.add(timeAbsoluteRadioButton);
        timeAbsoluteRadioButton.setText("Absolute");
        timeAbsoluteRadioButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                timeAbsoluteRadioButtonActionPerformed(evt);
            }
        });

        timeRelativeRadioButton.setBackground(new java.awt.Color(196, 204, 223));
        timeButtonGroup.add(timeRelativeRadioButton);
        timeRelativeRadioButton.setText("Relative");
        timeRelativeRadioButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                timeRelativeRadioButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(timeAbsoluteRadioButton)
                    .addComponent(timeRelativeRadioButton))
                .addContainerGap(158, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addComponent(timeAbsoluteRadioButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(timeRelativeRadioButton)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        getContentPane().add(jPanel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 130, 260, -1));

        jPanel4.setBackground(new java.awt.Color(196, 204, 223));
        jPanel4.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createEtchedBorder(), "Messsages"));

        numericRadioButton.setBackground(new java.awt.Color(196, 204, 223));
        messagesButtonGroup.add(numericRadioButton);
        numericRadioButton.setText("Numeric");
        numericRadioButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                numericRadioButtonActionPerformed(evt);
            }
        });

        symbolicRadioButton.setBackground(new java.awt.Color(196, 204, 223));
        messagesButtonGroup.add(symbolicRadioButton);
        symbolicRadioButton.setText("Symbolic");
        symbolicRadioButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                symbolicRadioButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(symbolicRadioButton)
                    .addComponent(numericRadioButton))
                .addContainerGap(116, Short.MAX_VALUE))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(4, 4, 4)
                .addComponent(numericRadioButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(symbolicRadioButton)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        getContentPane().add(jPanel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(270, 130, 220, -1));
        jPanel4.getAccessibleContext().setAccessibleName("Messages");

        jPanel1.setBackground(new java.awt.Color(196, 204, 223));
        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createEtchedBorder(), "Display mode"));

        cronologicalRadioButton.setBackground(new java.awt.Color(196, 204, 223));
        displayModebuttonGroup.add(cronologicalRadioButton);
        cronologicalRadioButton.setText("Cronological");
        cronologicalRadioButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cronologicalRadioButtonActionPerformed(evt);
            }
        });

        cronologicalCyclicRadioButton.setBackground(new java.awt.Color(196, 204, 223));
        displayModebuttonGroup.add(cronologicalCyclicRadioButton);
        cronologicalCyclicRadioButton.setText("Cronological, cyclic update");
        cronologicalCyclicRadioButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cronologicalCyclicRadioButtonActionPerformed(evt);
            }
        });

        fixedRadioButton.setBackground(new java.awt.Color(196, 204, 223));
        displayModebuttonGroup.add(fixedRadioButton);
        fixedRadioButton.setText("Fixed position");
        fixedRadioButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                fixedRadioButtonActionPerformed(evt);
            }
        });

        fixedCyclicRadioButton.setBackground(new java.awt.Color(196, 204, 223));
        displayModebuttonGroup.add(fixedCyclicRadioButton);
        fixedCyclicRadioButton.setText("Fixed position, cyclic update");
        fixedCyclicRadioButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                fixedCyclicRadioButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(cronologicalCyclicRadioButton)
                    .addComponent(fixedRadioButton)
                    .addComponent(fixedCyclicRadioButton)
                    .addComponent(cronologicalRadioButton))
                .addContainerGap(36, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(cronologicalRadioButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(cronologicalCyclicRadioButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(fixedRadioButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(fixedCyclicRadioButton)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        getContentPane().add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 10, 260, 120));

        applyButton.setText("Apply");
        applyButton.setMaximumSize(new java.awt.Dimension(66, 24));
        applyButton.setMinimumSize(new java.awt.Dimension(66, 24));
        applyButton.setPreferredSize(new java.awt.Dimension(66, 24));
        applyButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                applyButtonActionPerformed(evt);
            }
        });
        getContentPane().add(applyButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(320, 220, 80, -1));

        closeButton.setText("Close");
        closeButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                closeButtonActionPerformed(evt);
            }
        });
        getContentPane().add(closeButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(406, 220, 80, -1));

        pack();
    }// </editor-fold>//GEN-END:initComponents
    private void applyButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_applyButtonActionPerformed
        try {
            config.setProperty(PARAM_DISPLAY_UPDATE, update);
            config.setProperty(PARAM_DISPLAY_MODE, display_mode);
            config.setProperty(PARAM_TIME_FORMAT, time_format);
            config.setProperty(PARAM_NUMBER_FORMAT, number_format);
            config.setProperty(PARAM_MESSAGE_FORMAT, message_format);
            config.save();
        } catch (Exception ex) {
            logger.error("failed to save configuration file " + ex.getMessage());
        }

        // update parent window
        iFace.update();
        // close window
        this.dispose();
}//GEN-LAST:event_applyButtonActionPerformed

    private void closeButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_closeButtonActionPerformed
        // close window
        this.dispose();
}//GEN-LAST:event_closeButtonActionPerformed

    private void cronologicalRadioButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cronologicalRadioButtonActionPerformed
        display_mode = false;
        update = false;
    }//GEN-LAST:event_cronologicalRadioButtonActionPerformed

    private void cronologicalCyclicRadioButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cronologicalCyclicRadioButtonActionPerformed
        display_mode = false;
        update = true;
    }//GEN-LAST:event_cronologicalCyclicRadioButtonActionPerformed

    private void fixedRadioButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_fixedRadioButtonActionPerformed
        display_mode = true;
        update = false;
    }//GEN-LAST:event_fixedRadioButtonActionPerformed

    private void fixedCyclicRadioButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_fixedCyclicRadioButtonActionPerformed
        display_mode = true;
        update = true;
    }//GEN-LAST:event_fixedCyclicRadioButtonActionPerformed

    private void decimalRadioButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_decimalRadioButtonActionPerformed
        number_format = false;
    }//GEN-LAST:event_decimalRadioButtonActionPerformed

    private void hexadecimalRadioButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_hexadecimalRadioButtonActionPerformed
        number_format = true;
    }//GEN-LAST:event_hexadecimalRadioButtonActionPerformed

    private void timeAbsoluteRadioButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_timeAbsoluteRadioButtonActionPerformed
        time_format = false;
    }//GEN-LAST:event_timeAbsoluteRadioButtonActionPerformed

    private void timeRelativeRadioButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_timeRelativeRadioButtonActionPerformed
        time_format = true;
    }//GEN-LAST:event_timeRelativeRadioButtonActionPerformed

    private void numericRadioButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_numericRadioButtonActionPerformed
        message_format = false;
    }//GEN-LAST:event_numericRadioButtonActionPerformed

    private void symbolicRadioButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_symbolicRadioButtonActionPerformed
        message_format = true;
    }//GEN-LAST:event_symbolicRadioButtonActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton applyButton;
    private javax.swing.JButton closeButton;
    private javax.swing.JRadioButton cronologicalCyclicRadioButton;
    private javax.swing.JRadioButton cronologicalRadioButton;
    private javax.swing.JRadioButton decimalRadioButton;
    private javax.swing.ButtonGroup displayModebuttonGroup;
    private javax.swing.JRadioButton fixedCyclicRadioButton;
    private javax.swing.JRadioButton fixedRadioButton;
    private javax.swing.JRadioButton hexadecimalRadioButton;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.ButtonGroup messagesButtonGroup;
    private javax.swing.ButtonGroup numberFormatbuttonGroup;
    private javax.swing.JRadioButton numericRadioButton;
    private javax.swing.JRadioButton symbolicRadioButton;
    private javax.swing.JRadioButton timeAbsoluteRadioButton;
    private javax.swing.ButtonGroup timeButtonGroup;
    private javax.swing.JRadioButton timeRelativeRadioButton;
    // End of variables declaration//GEN-END:variables
}
